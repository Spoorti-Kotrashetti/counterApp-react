{"version":3,"sources":["logo.svg","components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","className","href","id","totalCounters","Counter","styler","fontSize","fontWeight","paraStyle","margin","padding","display","this","children","getBadgeClasses","formatValue","style","onClick","onIncrement","counter","onDecrement","onDelete","classes","value","Component","Counters","onReset","counters","map","key","background","width","navCount","onAddNew","App","state","counter2","incrementHandler","add","console","log","index","indexOf","nav","setState","decrementHandler","sub","deleteHandler","counterId","newList","filter","item","sum","forEach","a","handleReset","addNewHandler","push","Math","random","Fragment","i","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f98e57a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">   \r\n                Navbar\r\n                <span id='navBage' className='badge-pill badge-secondary  m-2'>{props.totalCounters}</span>\r\n            </a>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass  Counter extends Component {\r\n    \r\n    //----------------------------------------------------------------------------------------------------------------\r\n    styler = {\r\n        fontSize: 10,\r\n        fontWeight: 'bold',\r\n    }\r\n    paraStyle = {\r\n        margin:3,\r\n        padding:5,\r\n        display:'inline'\r\n    }\r\n    //----------------------------------------------------------------------------------------------------------------\r\n    render() { \r\n        // console.log('props',this.props)\r\n        \r\n        // let shopp = (\r\n        //     <div > \r\n\r\n                        {/* {/* {this.state.tags.length===0 && 'WE Need to create new tag!'}\r\n                        {this.renderTags()} */}\r\n                \r\n        //     </div>\r\n        // );\r\n        \r\n        return (\r\n            <div > \r\n                {this.props.children}\r\n                <span id='bage' className={this.getBadgeClasses()}>{this.formatValue()}</span>\r\n                <p style={this.paraStyle}><button onClick={()=>this.props.onIncrement(this.props.counter)} className='btn btn-secondary btn-sm'>+</button></p>\r\n                <p style={this.paraStyle}><button onClick={()=>this.props.onDecrement(this.props.counter)} className='btn btn-secondary btn-sm'>-</button></p>\r\n                <p style={this.paraStyle}><button onClick={()=>this.props.onDelete(this.props.counter.id)} className='btn btn-danger btn-sm'>Delete</button></p>\r\n                \r\n                \r\n                {/* {shopp} */}\r\n                \r\n            </div>\r\n           \r\n           );\r\n    }\r\n    \r\n    //-------------------------------------------------------------------------------------------------------------\r\n        \r\n    \r\n    getBadgeClasses (){\r\n        let classes = 'badge m-2 badge-';\r\n        classes+= this.props.counter.value===0 ? 'warning' : 'primary';\r\n        return classes;\r\n        \r\n    }\r\n    //----------------------------------------------------------------------------------------------------------------\r\n    formatValue(){\r\n        const {value} = this.props.counter;\r\n        return value === 0 ? 'Zero' : value;\r\n    }\r\n}\r\n    //---------------------------------------------------------------------------------------------------------------\r\n    export default Counter;\r\n        \r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n    // renderTags (){\r\n    //     if (this.state.tags.length === 0){\r\n    //         return <p>No tags are available!!</p>\r\n    //     }\r\n    //     return (\r\n    //         <ul>\r\n    //             {this.state.tags.map(tag => <li>{tag}</li>)}\r\n    //         </ul>\r\n    //     )\r\n    // }\r\n//----------------------------------------------------------------------------------------------------------------------","import React, { Component } from 'react';\r\nimport Counter from './counter'\r\n\r\nclass Counters extends Component {\r\n    render() { \r\n                return (\r\n                    <div style = {{margin:10, padding:18,}}>\r\n                        <h1 style={{margin:5,padding:2}}>SHOPPING CART</h1>\r\n                        <p><button onClick={this.props.onReset} className = 'btn btn-info btn-sm m-2'>Reset</button></p>\r\n                        {this.props.counters.map(counter=> (\r\n                                <Counter\r\n                                    key={counter.id} \r\n                                    onDelete={this.props.onDelete}\r\n                                    onIncrement={this.props.onIncrement}\r\n                                    onDecrement={this.props.onDecrement}\r\n                                    \r\n                                    // id={counter.id} \r\n                                    // value={counter.value}\r\n                                    counter={counter}\r\n                                />))}\r\n                        \r\n                        \r\n                        \r\n                        <h4 style={{background:'lightgrey', width:230,margin:5,padding:5}}>Total Selected\r\n                        <span id='totSelect' className='badge m-2 badge-primary'>{this.props.navCount}</span>\r\n                        </h4>\r\n                        <h1><button onClick={this.props.onAddNew} className = 'btn btn-info btn-sm'>Add New Item</button></h1>\r\n                    </div>\r\n                );\r\n    }\r\n}\r\nexport default Counters;","import React from 'react';\nimport logo from './logo.svg';\nimport { Component } from 'react';\nimport NavBar from './components/navbar'\nimport Counters from './components/counters';\n\nclass App extends Component {\n\n    state = { \n      counters: [\n          {id:1, value: 0,},\n          {id:2, value: 0,},\n          {id:3, value: 0,},\n          {id:4, value: 0,},\n      ],\n      counter2: [\n        {id:1, value:0}\n      ],\n\n      navCount:0,\n  };\n\n  incrementHandler = (counter) => {\n    const add = [...this.state.counters];\n    console.log('Increment clicked',counter);\n    const index = add.indexOf(counter)\n    add[index]={...counter}\n    add[index].value++\n    let nav = this.state.navCount+1;\n    this.setState ({counters: add});\n    this.setState({navCount:nav})\n    console.log(nav)\n  }\n\n  decrementHandler = (counter)=>{\n    const sub = [...this.state.counters];\n    console.log('Decrement clicked');\n    const index = sub.indexOf(counter)\n    sub[index]={...counter}\n    if(sub[index].value !== 0){\n        sub[index].value--\n        if(this.state.navCount !== 0){\n            let nav = this.state.navCount-1;\n            this.setState({navCount:nav})\n            console.log(nav)\n        }\n    }\n    this.setState({counters: sub})\n  }\n\n  deleteHandler=(counterId)=>{\n    console.log('Delete Event called',counterId);\n    let nonDeleteList = [...this.state.counters];\n    const newList = nonDeleteList.filter(item=>item.id !== counterId)\n    this.setState({counters: newList})\n    console.log(newList)\n    //--------------------\n    let sum = 0;\n    newList.forEach((a)=>sum += a.value)\n    this.setState({navCount:sum})\n    \n  }\n\n  handleReset=()=>{\n    console.log(\"Reset Event Handler called\")\n    let newList = this.state.counters.map(item=>{\n        item.value=0;\n        return item;\n    });\n    let nav = this.state.navCount;\n    this.setState({counters: newList});\n    this.setState({navCount:0})\n  }\n\n  addNewHandler=()=>{\n    console.log(\"Add Event Handler called\")\n    const newList = [...this.state.counters]\n    newList.push({ id: Math.random(), value: 0 })\n    this.setState({counters: newList})\n    \n  }\n\n  \n\n  render(){\n    return (\n      <React.Fragment>\n        <NavBar\n          totalCounters = {this.state.counters.filter(i=>i.value>0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counter2={this.state.counter2}\n            counters={this.state.counters} \n            navCount={this.state.navCount}\n            onReset={this.handleReset}\n            onAddNew={this.addNewHandler}\n            onIncrement={this.incrementHandler}\n            onDecrement={this.decrementHandler}\n            onDelete={this.deleteHandler}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}